name: Run Tests
on: workflow_call
jobs:
  build:
    name: Test Execution
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set Environment Variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/vars.env

      - name: Install coverlet.console
        run: dotnet tool install --global coverlet.console

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Initialize dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Find test projects
        id: find-projects
        run: |
          test_projects=$(find . -type f \( -name '*Test.csproj' -o -name '*Tests.csproj' -o -name 'Test*.csproj' \) -exec dirname {} \;)
          test_projects=${test_projects//$'\n'/ }
          test_projects=${test_projects//.\/src\//.\/}
          echo "::set-output name=projects::${test_projects}"

      - name: Run Tests
        working-directory: ./src
        shell: bash
        env:
          SOLUTION: ${{ env.SOLUTION_NAME }}
          PROJECTS: ${{ steps.find-projects.outputs.projects }}
        run: |
          dotnet restore "./${SOLUTION}" -s https://api.nuget.org/v3/index.json -s https://nuget.selise.biz/nuget
          dotnet build "./${SOLUTION}" --no-incremental
          for project in $PROJECTS; do
            dotnet test "$project" --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          done

      - name: List all files
        run: |
          find . -type f

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "**/*.trx"
          failTaskOnFailedTests: true